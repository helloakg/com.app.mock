<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[chrome browser launched---]]>
    </line>
    <line>
      <![CDATA[Executing launchSugarTest]]>
    </line>
    <line>
      <![CDATA[firefox browser launched---]]>
    </line>
    <line>
      <![CDATA[Executing launchAmazonTest]]>
    </line>
    <line>
      <![CDATA[Launching Amazon...]]>
    </line>
    <line>
      <![CDATA[Amazon launched...]]>
    </line>
    <line>
      <![CDATA[--Test case executed-]]>
    </line>
    <line>
      <![CDATA[--Browser closed---
]]>
    </line>
    <line>
      <![CDATA[firefox browser launched---]]>
    </line>
    <line>
      <![CDATA[Executing launchFlipkartTest]]>
    </line>
    <line>
      <![CDATA[Launching Flipkart...]]>
    </line>
    <line>
      <![CDATA[Flipkart launched...]]>
    </line>
    <line>
      <![CDATA[--Test case executed-]]>
    </line>
    <line>
      <![CDATA[--Browser closed---
]]>
    </line>
    <line>
      <![CDATA[microsoftedge browser launched---]]>
    </line>
    <line>
      <![CDATA[Executing launchPrimeTest]]>
    </line>
    <line>
      <![CDATA[Launching Prime...]]>
    </line>
    <line>
      <![CDATA[Prime video launched...]]>
    </line>
    <line>
      <![CDATA[--Test case executed-]]>
    </line>
    <line>
      <![CDATA[--Browser closed---
]]>
    </line>
    <line>
      <![CDATA[microsoftedge browser launched---]]>
    </line>
    <line>
      <![CDATA[Executing launchNetflixTest]]>
    </line>
    <line>
      <![CDATA[Launching Sugar Cosmetic...]]>
    </line>
    <line>
      <![CDATA[Sugar cosmatics launched...]]>
    </line>
    <line>
      <![CDATA[--Test case executed-]]>
    </line>
    <line>
      <![CDATA[--Browser closed---
]]>
    </line>
    <line>
      <![CDATA[Launching Netflix...]]>
    </line>
    <line>
      <![CDATA[Netflix launched...]]>
    </line>
    <line>
      <![CDATA[--Test case executed-]]>
    </line>
    <line>
      <![CDATA[chrome browser launched---]]>
    </line>
    <line>
      <![CDATA[Executing launchLorealTest]]>
    </line>
    <line>
      <![CDATA[--Browser closed---
]]>
    </line>
    <line>
      <![CDATA[Launching Loreal Paris...]]>
    </line>
    <line>
      <![CDATA[Loreal Paris launched...]]>
    </line>
    <line>
      <![CDATA[--Test case executed-]]>
    </line>
    <line>
      <![CDATA[chrome browser launched---]]>
    </line>
    <line>
      <![CDATA[Executing launchSwiggyTest]]>
    </line>
    <line>
      <![CDATA[--Browser closed---
]]>
    </line>
    <line>
      <![CDATA[Launching Swiggy...]]>
    </line>
    <line>
      <![CDATA[Swiggy launched...]]>
    </line>
    <line>
      <![CDATA[--Test case executed-]]>
    </line>
    <line>
      <![CDATA[--Browser closed---
]]>
    </line>
    <line>
      <![CDATA[chrome browser launched---]]>
    </line>
    <line>
      <![CDATA[Executing launchZomatoTest]]>
    </line>
    <line>
      <![CDATA[Launching Zomato...]]>
    </line>
    <line>
      <![CDATA[Zomato launched...]]>
    </line>
    <line>
      <![CDATA[--Test case executed-]]>
    </line>
    <line>
      <![CDATA[--Browser closed---
]]>
    </line>
  </reporter-output>
  <suite started-at="2024-08-01T17:36:02 IST" name="ParallelSuite" finished-at="2024-08-01T17:37:34 IST" duration-ms="92049">
    <groups>
      <group name="ecom">
        <method signature="LaunchAmazonTest.launchAmazonTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.ecomTest.LaunchAmazonTest@15de0b3c]" name="launchAmazonTest" class="com.app.mock.ecomTest.LaunchAmazonTest"/>
        <method signature="LaunchFlipkartTest.launchFlipkartTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.ecomTest.LaunchFlipkartTest@489115ef]" name="launchFlipkartTest" class="com.app.mock.ecomTest.LaunchFlipkartTest"/>
      </group> <!-- ecom -->
      <group name="beauty">
        <method signature="LaunchLorealTest.launchLorealTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.beautyTest.LaunchLorealTest@59474f18]" name="launchLorealTest" class="com.app.mock.beautyTest.LaunchLorealTest"/>
        <method signature="LaunchSugarTest.launchSugarTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.beautyTest.LaunchSugarTest@77888435]" name="launchSugarTest" class="com.app.mock.beautyTest.LaunchSugarTest"/>
      </group> <!-- beauty -->
      <group name="entertainment">
        <method signature="LaunchNetflixTest.launchNetflixTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.entertainmentTest.LaunchNetflixTest@4d1c00d0]" name="launchNetflixTest" class="com.app.mock.entertainmentTest.LaunchNetflixTest"/>
        <method signature="LaunchPrimeTest.launchPrimeTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.entertainmentTest.LaunchPrimeTest@79079097]" name="launchPrimeTest" class="com.app.mock.entertainmentTest.LaunchPrimeTest"/>
      </group> <!-- entertainment -->
      <group name="zomato">
        <method signature="LaunchZomatoTest.launchZomatoTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.foodTest.LaunchZomatoTest@367ffa75]" name="launchZomatoTest" class="com.app.mock.foodTest.LaunchZomatoTest"/>
      </group> <!-- zomato -->
      <group name="swiggy">
        <method signature="LaunchSwigyTest.launchSwiggyTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.foodTest.LaunchSwigyTest@2cd76f31]" name="launchSwiggyTest" class="com.app.mock.foodTest.LaunchSwigyTest"/>
      </group> <!-- swiggy -->
    </groups>
    <test started-at="2024-08-01T17:36:02 IST" name="ParallelTest2" finished-at="2024-08-01T17:36:13 IST" duration-ms="11127">
      <class name="com.app.mock.ecomTest.LaunchFlipkartTest">
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:com.app.mock.ecomTest.LaunchFlipkartTest@489115ef]" started-at="2024-08-01T17:36:08 IST" name="configBC" finished-at="2024-08-01T17:36:10 IST" duration-ms="2428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[firefox browser launched---]]>
            </line>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method signature="launchFlipkartTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.ecomTest.LaunchFlipkartTest@489115ef]" started-at="2024-08-01T17:36:10 IST" name="launchFlipkartTest" finished-at="2024-08-01T17:36:12 IST" duration-ms="1676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.app.mock.ecomTest.LaunchFlipkartTest.launchFlipkartTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Executing launchFlipkartTest]]>
            </line>
            <line>
              <![CDATA[Launching Flipkart...]]>
            </line>
            <line>
              <![CDATA[Flipkart launched...]]>
            </line>
          </reporter-output>
        </test-method> <!-- launchFlipkartTest -->
        <test-method is-config="true" signature="confidAF()[pri:0, instance:com.app.mock.ecomTest.LaunchFlipkartTest@489115ef]" started-at="2024-08-01T17:36:12 IST" name="confidAF" finished-at="2024-08-01T17:36:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Test case executed-]]>
            </line>
          </reporter-output>
        </test-method> <!-- confidAF -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.app.mock.ecomTest.LaunchFlipkartTest@489115ef]" started-at="2024-08-01T17:36:12 IST" name="configAC" finished-at="2024-08-01T17:36:13 IST" duration-ms="684" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Browser closed---
]]>
            </line>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.app.mock.ecomTest.LaunchFlipkartTest -->
      <class name="com.app.mock.ecomTest.LaunchAmazonTest">
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:com.app.mock.ecomTest.LaunchAmazonTest@15de0b3c]" started-at="2024-08-01T17:36:02 IST" name="configBC" finished-at="2024-08-01T17:36:05 IST" duration-ms="3414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[firefox browser launched---]]>
            </line>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method signature="launchAmazonTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.ecomTest.LaunchAmazonTest@15de0b3c]" started-at="2024-08-01T17:36:05 IST" name="launchAmazonTest" finished-at="2024-08-01T17:36:07 IST" duration-ms="2004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.app.mock.ecomTest.LaunchAmazonTest.launchAmazonTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Executing launchAmazonTest]]>
            </line>
            <line>
              <![CDATA[Launching Amazon...]]>
            </line>
            <line>
              <![CDATA[Amazon launched...]]>
            </line>
          </reporter-output>
        </test-method> <!-- launchAmazonTest -->
        <test-method is-config="true" signature="confidAF()[pri:0, instance:com.app.mock.ecomTest.LaunchAmazonTest@15de0b3c]" started-at="2024-08-01T17:36:07 IST" name="confidAF" finished-at="2024-08-01T17:36:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Test case executed-]]>
            </line>
          </reporter-output>
        </test-method> <!-- confidAF -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.app.mock.ecomTest.LaunchAmazonTest@15de0b3c]" started-at="2024-08-01T17:36:07 IST" name="configAC" finished-at="2024-08-01T17:36:08 IST" duration-ms="889" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Browser closed---
]]>
            </line>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.app.mock.ecomTest.LaunchAmazonTest -->
    </test> <!-- ParallelTest2 -->
    <test started-at="2024-08-01T17:36:13 IST" name="ParallelTest3" finished-at="2024-08-01T17:36:34 IST" duration-ms="21060">
      <class name="com.app.mock.entertainmentTest.LaunchNetflixTest">
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:com.app.mock.entertainmentTest.LaunchNetflixTest@4d1c00d0]" started-at="2024-08-01T17:36:17 IST" name="configBC" finished-at="2024-08-01T17:36:18 IST" duration-ms="838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[microsoftedge]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[microsoftedge browser launched---]]>
            </line>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method signature="launchNetflixTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.entertainmentTest.LaunchNetflixTest@4d1c00d0]" started-at="2024-08-01T17:36:18 IST" name="launchNetflixTest" finished-at="2024-08-01T17:36:33 IST" duration-ms="14731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.app.mock.entertainmentTest.LaunchNetflixTest.launchNetflixTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Executing launchNetflixTest]]>
            </line>
            <line>
              <![CDATA[Launching Netflix...]]>
            </line>
            <line>
              <![CDATA[Netflix launched...]]>
            </line>
          </reporter-output>
        </test-method> <!-- launchNetflixTest -->
        <test-method is-config="true" signature="confidAF()[pri:0, instance:com.app.mock.entertainmentTest.LaunchNetflixTest@4d1c00d0]" started-at="2024-08-01T17:36:33 IST" name="confidAF" finished-at="2024-08-01T17:36:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Test case executed-]]>
            </line>
          </reporter-output>
        </test-method> <!-- confidAF -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.app.mock.entertainmentTest.LaunchNetflixTest@4d1c00d0]" started-at="2024-08-01T17:36:33 IST" name="configAC" finished-at="2024-08-01T17:36:34 IST" duration-ms="1221" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Browser closed---
]]>
            </line>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.app.mock.entertainmentTest.LaunchNetflixTest -->
      <class name="com.app.mock.entertainmentTest.LaunchPrimeTest">
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:com.app.mock.entertainmentTest.LaunchPrimeTest@79079097]" started-at="2024-08-01T17:36:13 IST" name="configBC" finished-at="2024-08-01T17:36:14 IST" duration-ms="1044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[microsoftedge]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[microsoftedge browser launched---]]>
            </line>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method signature="launchPrimeTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.entertainmentTest.LaunchPrimeTest@79079097]" started-at="2024-08-01T17:36:14 IST" name="launchPrimeTest" finished-at="2024-08-01T17:36:16 IST" duration-ms="2008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.app.mock.entertainmentTest.LaunchPrimeTest.launchPrimeTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Executing launchPrimeTest]]>
            </line>
            <line>
              <![CDATA[Launching Prime...]]>
            </line>
            <line>
              <![CDATA[Prime video launched...]]>
            </line>
          </reporter-output>
        </test-method> <!-- launchPrimeTest -->
        <test-method is-config="true" signature="confidAF()[pri:0, instance:com.app.mock.entertainmentTest.LaunchPrimeTest@79079097]" started-at="2024-08-01T17:36:16 IST" name="confidAF" finished-at="2024-08-01T17:36:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Test case executed-]]>
            </line>
          </reporter-output>
        </test-method> <!-- confidAF -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.app.mock.entertainmentTest.LaunchPrimeTest@79079097]" started-at="2024-08-01T17:36:16 IST" name="configAC" finished-at="2024-08-01T17:36:17 IST" duration-ms="1212" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Browser closed---
]]>
            </line>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.app.mock.entertainmentTest.LaunchPrimeTest -->
    </test> <!-- ParallelTest3 -->
    <test started-at="2024-08-01T17:36:02 IST" name="ParallelTest1" finished-at="2024-08-01T17:36:35 IST" duration-ms="33174">
      <class name="com.app.mock.beautyTest.LaunchSugarTest">
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:com.app.mock.beautyTest.LaunchSugarTest@77888435]" started-at="2024-08-01T17:36:02 IST" name="configBC" finished-at="2024-08-01T17:36:03 IST" duration-ms="1274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[chrome browser launched---]]>
            </line>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method signature="launchSugarTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.beautyTest.LaunchSugarTest@77888435]" started-at="2024-08-01T17:36:03 IST" name="launchSugarTest" finished-at="2024-08-01T17:36:32 IST" duration-ms="29181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.app.mock.beautyTest.LaunchSugarTest.launchSugarTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Executing launchSugarTest]]>
            </line>
            <line>
              <![CDATA[Launching Sugar Cosmetic...]]>
            </line>
            <line>
              <![CDATA[Sugar cosmatics launched...]]>
            </line>
          </reporter-output>
        </test-method> <!-- launchSugarTest -->
        <test-method is-config="true" signature="confidAF()[pri:0, instance:com.app.mock.beautyTest.LaunchSugarTest@77888435]" started-at="2024-08-01T17:36:32 IST" name="confidAF" finished-at="2024-08-01T17:36:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Test case executed-]]>
            </line>
          </reporter-output>
        </test-method> <!-- confidAF -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.app.mock.beautyTest.LaunchSugarTest@77888435]" started-at="2024-08-01T17:36:32 IST" name="configAC" finished-at="2024-08-01T17:36:32 IST" duration-ms="117" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Browser closed---
]]>
            </line>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.app.mock.beautyTest.LaunchSugarTest -->
      <class name="com.app.mock.beautyTest.LaunchLorealTest">
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:com.app.mock.beautyTest.LaunchLorealTest@59474f18]" started-at="2024-08-01T17:36:32 IST" name="configBC" finished-at="2024-08-01T17:36:33 IST" duration-ms="762" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[chrome browser launched---]]>
            </line>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method signature="launchLorealTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.beautyTest.LaunchLorealTest@59474f18]" started-at="2024-08-01T17:36:33 IST" name="launchLorealTest" finished-at="2024-08-01T17:36:35 IST" duration-ms="1681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.app.mock.beautyTest.LaunchLorealTest.launchLorealTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Executing launchLorealTest]]>
            </line>
            <line>
              <![CDATA[Launching Loreal Paris...]]>
            </line>
            <line>
              <![CDATA[Loreal Paris launched...]]>
            </line>
          </reporter-output>
        </test-method> <!-- launchLorealTest -->
        <test-method is-config="true" signature="confidAF()[pri:0, instance:com.app.mock.beautyTest.LaunchLorealTest@59474f18]" started-at="2024-08-01T17:36:35 IST" name="confidAF" finished-at="2024-08-01T17:36:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Test case executed-]]>
            </line>
          </reporter-output>
        </test-method> <!-- confidAF -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.app.mock.beautyTest.LaunchLorealTest@59474f18]" started-at="2024-08-01T17:36:35 IST" name="configAC" finished-at="2024-08-01T17:36:35 IST" duration-ms="125" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Browser closed---
]]>
            </line>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.app.mock.beautyTest.LaunchLorealTest -->
    </test> <!-- ParallelTest1 -->
    <test started-at="2024-08-01T17:36:34 IST" name="ParallelTest4" finished-at="2024-08-01T17:37:34 IST" duration-ms="59815">
      <class name="com.app.mock.foodTest.LaunchSwigyTest">
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:com.app.mock.foodTest.LaunchSwigyTest@2cd76f31]" started-at="2024-08-01T17:36:34 IST" name="configBC" finished-at="2024-08-01T17:36:35 IST" duration-ms="896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[chrome browser launched---]]>
            </line>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method signature="launchSwiggyTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.foodTest.LaunchSwigyTest@2cd76f31]" started-at="2024-08-01T17:36:35 IST" name="launchSwiggyTest" finished-at="2024-08-01T17:37:03 IST" duration-ms="28524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.app.mock.foodTest.LaunchSwigyTest.launchSwiggyTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Executing launchSwiggyTest]]>
            </line>
            <line>
              <![CDATA[Launching Swiggy...]]>
            </line>
            <line>
              <![CDATA[Swiggy launched...]]>
            </line>
          </reporter-output>
        </test-method> <!-- launchSwiggyTest -->
        <test-method is-config="true" signature="confidAF()[pri:0, instance:com.app.mock.foodTest.LaunchSwigyTest@2cd76f31]" started-at="2024-08-01T17:37:03 IST" name="confidAF" finished-at="2024-08-01T17:37:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Test case executed-]]>
            </line>
          </reporter-output>
        </test-method> <!-- confidAF -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.app.mock.foodTest.LaunchSwigyTest@2cd76f31]" started-at="2024-08-01T17:37:03 IST" name="configAC" finished-at="2024-08-01T17:37:03 IST" duration-ms="110" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Browser closed---
]]>
            </line>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.app.mock.foodTest.LaunchSwigyTest -->
      <class name="com.app.mock.foodTest.LaunchZomatoTest">
        <test-method is-config="true" signature="configBC(java.lang.String)[pri:0, instance:com.app.mock.foodTest.LaunchZomatoTest@367ffa75]" started-at="2024-08-01T17:37:03 IST" name="configBC" finished-at="2024-08-01T17:37:04 IST" duration-ms="1029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[chrome browser launched---]]>
            </line>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method signature="launchZomatoTest(java.lang.reflect.Method)[pri:0, instance:com.app.mock.foodTest.LaunchZomatoTest@367ffa75]" started-at="2024-08-01T17:37:04 IST" name="launchZomatoTest" finished-at="2024-08-01T17:37:34 IST" duration-ms="29129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.app.mock.foodTest.LaunchZomatoTest.launchZomatoTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Executing launchZomatoTest]]>
            </line>
            <line>
              <![CDATA[Launching Zomato...]]>
            </line>
            <line>
              <![CDATA[Zomato launched...]]>
            </line>
          </reporter-output>
        </test-method> <!-- launchZomatoTest -->
        <test-method is-config="true" signature="confidAF()[pri:0, instance:com.app.mock.foodTest.LaunchZomatoTest@367ffa75]" started-at="2024-08-01T17:37:34 IST" name="confidAF" finished-at="2024-08-01T17:37:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Test case executed-]]>
            </line>
          </reporter-output>
        </test-method> <!-- confidAF -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.app.mock.foodTest.LaunchZomatoTest@367ffa75]" started-at="2024-08-01T17:37:34 IST" name="configAC" finished-at="2024-08-01T17:37:34 IST" duration-ms="122" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[--Browser closed---
]]>
            </line>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.app.mock.foodTest.LaunchZomatoTest -->
    </test> <!-- ParallelTest4 -->
  </suite> <!-- ParallelSuite -->
</testng-results>
